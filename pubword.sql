CREATE DATABASE  IF NOT EXISTS `pubworld` /*!40100 DEFAULT CHARACTER SET latin1 */;
USE `pubworld`;
-- MySQL dump 10.13  Distrib 5.6.17, for Win32 (x86)
--
-- Host: 127.0.0.1    Database: pubworld
-- ------------------------------------------------------
-- Server version	5.6.20

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `article`
--

DROP TABLE IF EXISTS `article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `article` (
  `Aid` int(11) NOT NULL AUTO_INCREMENT,
  `Paperid` int(11) NOT NULL,
  `Nameid` int(11) NOT NULL,
  `Confid` int(11) DEFAULT NULL,
  `Year` year(4) DEFAULT NULL,
  PRIMARY KEY (`Aid`),
  UNIQUE KEY `Aid_UNIQUE` (`Aid`)
) ENGINE=InnoDB AUTO_INCREMENT=464 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `article`
--

LOCK TABLES `article` WRITE;
/*!40000 ALTER TABLE `article` DISABLE KEYS */;
INSERT INTO `article` VALUES (1,1,329,1,2012),(2,2,330,1,2012),(3,2,331,1,2012),(4,3,332,1,2012),(5,3,333,1,2012),(6,4,334,1,2012),(7,4,335,1,2012),(8,4,336,1,2012),(9,5,337,1,2012),(10,5,338,1,2012),(11,6,339,1,2012),(12,7,340,1,2012),(13,7,341,1,2012),(14,8,342,1,2012),(15,8,343,1,2012),(16,8,344,1,2012),(17,8,345,1,2012),(18,9,346,1,2012),(19,9,347,1,2012),(20,9,348,1,2012),(21,10,349,1,2012),(22,10,350,1,2012),(23,10,351,1,2012),(24,10,352,1,2012),(25,11,353,1,2012),(26,11,354,1,2012),(27,11,355,1,2012),(28,12,356,1,2012),(29,12,330,1,2012),(30,13,336,1,2012),(31,13,359,1,2012),(32,13,360,1,2012),(33,13,331,1,2012),(34,14,362,1,2012),(35,14,363,1,2012),(36,15,364,1,2012),(37,15,329,1,2012),(38,16,366,1,2012),(39,16,367,1,2012),(40,16,368,1,2012),(41,16,369,1,2012),(42,17,370,1,2012),(43,17,371,1,2012),(44,17,372,1,2012),(45,18,373,1,2012),(46,18,374,1,2012),(47,19,375,1,2012),(48,19,376,1,2012),(49,19,377,1,2012),(50,19,378,1,2012),(51,19,229,1,2012),(52,20,380,1,2012),(53,21,381,1,2012),(54,21,382,1,2012),(55,21,383,1,2012),(56,22,384,1,2012),(57,22,385,1,2012),(58,22,386,1,2012),(59,23,387,1,2012),(60,23,388,1,2012),(61,23,389,1,2012),(62,24,390,1,2012),(63,24,391,1,2012),(64,24,392,1,2012),(65,25,393,1,2012),(66,25,394,1,2012),(67,25,346,1,2012),(68,25,396,1,2012),(69,25,397,1,2012),(70,25,347,1,2012),(71,26,399,1,2012),(72,26,400,1,2012),(73,26,401,1,2012),(74,27,402,1,2014),(75,27,403,1,2014),(76,27,404,1,2014),(77,28,340,1,2014),(78,28,339,1,2014),(79,28,407,1,2014),(80,28,408,1,2014),(81,29,409,1,2014),(82,29,410,1,2014),(83,29,411,1,2014),(84,29,412,1,2014),(85,30,368,1,2014),(86,30,369,1,2014),(87,31,329,1,2014),(88,32,416,1,2014),(89,32,368,1,2014),(90,32,418,1,2014),(91,32,419,1,2014),(92,33,420,1,2014),(93,33,421,1,2014),(94,33,329,1,2014),(95,34,423,1,2014),(96,34,424,1,2014),(97,35,349,1,2014),(98,35,426,1,2014),(99,35,351,1,2014),(100,35,352,1,2014),(101,36,429,1,2014),(102,36,430,1,2014),(103,36,431,1,2014),(104,36,432,1,2014),(105,36,433,1,2014),(106,37,434,1,2014),(107,37,435,1,2014),(108,38,436,1,2014),(109,38,437,1,2014),(110,38,438,1,2014),(111,39,385,1,2014),(112,39,386,1,2014),(113,39,391,1,2014),(114,40,442,1,2014),(115,40,443,1,2014),(116,41,444,1,2014),(117,41,445,1,2014),(118,41,446,1,2014),(119,42,442,1,2014),(120,42,448,1,2014),(121,42,449,1,2014),(122,43,450,1,2014),(123,43,451,1,2014),(124,43,452,1,2014),(125,44,451,1,2014),(126,44,454,1,2014),(127,44,455,1,2014),(128,45,380,1,2014),(129,45,457,1,2014),(130,45,458,1,2014),(131,45,459,1,2014),(132,46,375,1,2014),(133,46,461,1,2014),(134,46,229,1,2014),(135,47,463,1,2014),(136,47,464,1,2014),(137,48,381,1,2014),(138,48,466,1,2014),(139,48,467,1,2014),(140,48,468,1,2014),(141,49,469,1,2011),(142,49,470,1,2011),(143,50,471,1,2011),(144,50,472,1,2011),(145,50,473,1,2011),(146,50,474,1,2011),(147,50,475,1,2011),(148,51,221,1,2011),(149,51,477,1,2011),(150,51,478,1,2011),(151,51,479,1,2011),(152,51,480,1,2011),(153,51,478,1,2011),(154,51,482,1,2011),(155,51,478,1,2011),(156,52,484,1,2011),(157,52,485,1,2011),(158,52,486,1,2011),(159,52,474,1,2011),(160,52,488,1,2011),(161,53,489,1,2011),(162,53,490,1,2011),(163,53,491,1,2011),(164,54,492,1,2011),(165,54,493,1,2011),(166,54,494,1,2011),(167,55,495,1,2011),(168,55,496,1,2011),(169,56,497,1,2011),(170,56,498,1,2011),(171,56,499,1,2011),(172,57,500,1,2011),(173,57,501,1,2011),(174,58,502,1,2011),(175,58,503,1,2011),(176,59,504,1,2011),(177,59,505,1,2011),(178,59,506,1,2011),(179,59,507,1,2011),(180,60,508,1,2011),(181,60,509,1,2011),(182,60,510,1,2011),(183,60,511,1,2011),(184,61,512,1,2011),(185,61,513,1,2011),(186,61,514,1,2011),(187,61,515,1,2011),(188,62,516,1,2011),(189,62,517,1,2011),(190,62,479,1,2011),(191,62,519,1,2011),(192,63,520,1,2011),(193,63,521,1,2011),(194,63,522,1,2011),(195,63,523,1,2011),(196,63,524,1,2011),(197,63,525,1,2011),(198,63,526,1,2011),(199,64,527,1,2011),(200,64,528,1,2011),(201,64,529,1,2011),(202,65,530,1,2011),(203,65,531,1,2011),(204,66,532,1,2011),(205,66,533,1,2011),(206,66,534,1,2011),(207,66,535,1,2011),(208,66,536,1,2011),(209,67,537,1,2011),(210,67,538,1,2011),(211,67,539,1,2011),(212,67,540,1,2011),(213,67,541,1,2011),(214,68,542,1,2011),(215,68,543,1,2011),(216,68,544,1,2011),(217,68,545,1,2011),(218,69,546,1,2011),(219,69,547,1,2011),(220,69,548,1,2011),(221,69,549,1,2011),(222,69,550,1,2011),(223,69,551,1,2011),(224,70,552,1,2011),(225,70,553,1,2011),(226,70,554,1,2011),(227,71,555,1,2011),(228,71,556,1,2011),(229,72,557,1,2011),(230,72,558,1,2011),(231,73,559,1,2011),(232,73,560,1,2011),(233,73,561,1,2011),(234,74,562,1,2011),(235,74,560,1,2011),(236,74,564,1,2011),(237,75,565,1,2011),(238,75,566,1,2011),(239,75,567,1,2011),(240,76,568,1,2011),(241,76,569,1,2011),(242,76,515,1,2011),(243,76,571,1,2011),(244,77,572,1,2011),(245,77,573,1,2011),(246,77,574,1,2011),(247,77,575,1,2011),(248,78,576,1,2011),(249,78,577,1,2011),(250,78,578,1,2011),(251,78,579,1,2011),(252,79,580,1,2011),(253,79,581,1,2011),(254,79,582,1,2011),(255,80,583,1,2011),(256,80,584,1,2011),(257,80,585,1,2011),(258,81,586,1,2011),(259,81,587,1,2011),(260,81,478,1,2011),(261,81,589,1,2011),(262,81,590,1,2011),(263,81,478,1,2011),(264,82,592,1,2011),(265,82,593,1,2011),(266,82,594,1,2011),(267,82,595,1,2011),(268,82,596,1,2011),(269,82,597,1,2011),(270,83,102,1,2011),(271,83,599,1,2011),(272,83,600,1,2011),(273,83,601,1,2011),(274,83,602,1,2011),(275,84,603,1,2011),(276,84,604,1,2011),(277,84,605,1,2011),(278,84,606,1,2011),(279,84,593,1,2011),(280,85,608,1,2011),(281,85,515,1,2011),(282,85,610,1,2011),(283,85,479,1,2011),(284,85,612,1,2011),(285,86,613,1,2011),(286,86,614,1,2011),(287,87,615,1,2011),(288,87,616,1,2011),(289,87,581,1,2011),(290,88,385,1,2011),(291,88,619,1,2011),(292,88,620,1,2011),(293,88,621,1,2011),(294,88,622,1,2011),(295,89,623,1,2011),(296,89,624,1,2011),(297,90,385,1,2011),(298,90,619,1,2011),(299,90,627,1,2011),(300,90,628,1,2011),(301,90,629,1,2011),(302,90,630,1,2011),(303,91,631,1,2011),(304,91,632,1,2011),(305,91,633,1,2011),(306,92,634,1,2011),(307,92,635,1,2011),(308,92,633,1,2011),(309,93,637,1,2011),(310,93,638,1,2011),(311,93,639,1,2011),(312,93,640,1,2011),(313,94,641,1,2011),(314,94,642,1,2011),(315,94,643,1,2011),(316,95,644,1,2011),(317,95,645,1,2011),(318,96,646,1,2011),(319,96,647,1,2011),(320,96,648,1,2011),(321,97,649,1,2011),(322,97,650,1,2011),(323,97,651,1,2011),(324,97,652,1,2011),(325,98,653,1,2011),(326,98,528,1,2011),(327,99,655,1,2011),(328,99,656,1,2011),(329,99,657,1,2011),(330,100,658,1,2011),(331,100,659,1,2011),(332,101,660,1,2011),(333,101,661,1,2011),(334,101,662,1,2011),(335,101,663,1,2011),(336,101,550,1,2011),(337,101,665,1,2011),(338,101,666,1,2011),(339,102,667,1,2011),(340,102,668,1,2011),(341,102,659,1,2011),(342,102,670,1,2011),(343,103,671,1,2011),(344,103,672,1,2011),(345,104,673,1,2011),(346,104,674,1,2011),(347,104,675,1,2011),(348,104,676,1,2011),(349,104,677,1,2011),(350,105,678,1,2011),(351,105,679,1,2011),(352,105,680,1,2011),(353,105,499,1,2011),(354,106,682,1,2011),(355,106,683,1,2011),(356,106,684,1,2011),(357,106,685,1,2011),(358,107,686,1,2011),(359,107,643,1,2011),(360,107,688,1,2011),(361,107,689,1,2011),(362,108,690,1,2011),(363,108,691,1,2011),(364,108,692,1,2011),(365,109,693,1,2011),(366,109,694,1,2011),(367,109,695,1,2011),(368,109,696,1,2011),(369,109,697,1,2011),(370,110,698,1,2011),(371,110,699,1,2011),(372,110,700,1,2011),(373,111,701,1,2011),(374,111,702,1,2011),(375,111,703,1,2011),(376,112,704,1,2011),(377,112,705,1,2011),(378,112,706,1,2011),(379,112,707,1,2011),(380,112,708,1,2011),(381,113,709,1,2011),(382,113,710,1,2011),(383,113,702,1,2011),(384,114,712,1,2011),(385,114,713,1,2011),(386,114,714,1,2011),(387,114,715,1,2011),(388,114,716,1,2011),(389,114,717,1,2011),(390,115,718,1,2011),(391,115,719,1,2011),(392,116,720,1,2011),(393,116,633,1,2011),(394,117,722,1,2011),(395,117,723,1,2011),(396,117,724,1,2011),(397,117,725,1,2011),(398,118,346,1,2011),(399,118,727,1,2011),(400,118,728,1,2011),(401,118,729,1,2011),(402,119,730,1,2011),(403,119,731,1,2011),(404,119,732,1,2011),(405,120,733,1,2011),(406,120,734,1,2011),(407,120,725,1,2011),(408,120,736,1,2011),(409,121,737,1,2011),(410,121,738,1,2011),(411,122,739,1,2011),(412,122,740,1,2011),(413,122,741,1,2011),(414,123,742,1,2011),(415,123,549,1,2011),(416,123,744,1,2011),(417,123,700,1,2011),(418,124,746,1,2011),(419,124,747,1,2011),(420,124,748,1,2011),(421,124,749,1,2011),(422,125,750,1,2011),(423,125,509,1,2011),(424,125,674,1,2011),(425,126,753,1,2011),(426,126,754,1,2011),(427,126,567,1,2011),(428,127,756,1,2011),(429,127,585,1,2011),(430,127,758,1,2011),(431,127,479,1,2011),(432,128,646,1,2011),(433,128,761,1,2011),(434,128,647,1,2011),(435,128,763,1,2011),(436,129,764,1,2011),(437,129,657,1,2011),(438,129,766,1,2011),(439,129,767,1,2011),(440,130,768,1,2011),(441,130,769,1,2011),(442,130,770,1,2011),(443,130,771,1,2011),(444,130,772,1,2011),(445,131,773,1,2011),(446,131,774,1,2011),(447,131,775,1,2011),(448,132,776,1,2011),(449,132,777,1,2011),(450,132,778,1,2011),(451,132,779,1,2011),(452,132,780,1,2011),(453,132,781,1,2011),(454,132,782,1,2011),(455,133,783,1,2011),(456,133,784,1,2011),(457,133,785,1,2011),(458,134,786,1,2011),(459,134,787,1,2011),(460,134,788,1,2011),(461,134,540,1,2011),(462,135,790,1,2011),(463,135,791,1,2011);
/*!40000 ALTER TABLE `article` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `conference`
--

DROP TABLE IF EXISTS `conference`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `conference` (
  `Cid` int(11) NOT NULL AUTO_INCREMENT,
  `Conference` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`Cid`),
  UNIQUE KEY `Conference_UNIQUE` (`Conference`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `conference`
--

LOCK TABLES `conference` WRITE;
/*!40000 ALTER TABLE `conference` DISABLE KEYS */;
INSERT INTO `conference` VALUES (1,'Cigmod');
/*!40000 ALTER TABLE `conference` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `member`
--

DROP TABLE IF EXISTS `member`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `member` (
  `Mid` int(11) NOT NULL AUTO_INCREMENT,
  `Nameid` int(11) NOT NULL,
  `Orgid` int(11) NOT NULL,
  `Rollid` int(11) NOT NULL,
  `Confid` int(11) DEFAULT NULL,
  `Year` year(4) DEFAULT NULL,
  PRIMARY KEY (`Mid`),
  UNIQUE KEY `Mid_UNIQUE` (`Mid`)
) ENGINE=InnoDB AUTO_INCREMENT=329 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `member`
--

LOCK TABLES `member` WRITE;
/*!40000 ALTER TABLE `member` DISABLE KEYS */;
INSERT INTO `member` VALUES (1,1,1,1,1,2012),(2,2,2,2,1,2012),(3,3,3,2,1,2012),(4,4,4,2,1,2012),(5,5,5,2,1,2012),(6,6,6,2,1,2012),(7,7,7,2,1,2012),(8,8,8,2,1,2012),(9,9,9,2,1,2012),(10,10,10,2,1,2012),(11,11,11,2,1,2012),(12,12,12,3,1,2012),(13,13,3,3,1,2012),(14,14,14,3,1,2012),(15,15,15,3,1,2012),(16,16,16,3,1,2012),(17,17,17,3,1,2012),(18,18,18,3,1,2012),(19,19,19,3,1,2012),(20,20,20,3,1,2012),(21,21,21,3,1,2012),(22,22,22,3,1,2012),(23,23,23,3,1,2012),(24,24,24,3,1,2012),(25,25,4,3,1,2012),(26,26,17,3,1,2012),(27,27,27,3,1,2012),(28,28,27,3,1,2012),(29,29,29,3,1,2012),(30,30,30,3,1,2012),(31,31,31,3,1,2012),(32,32,32,3,1,2012),(33,33,33,3,1,2012),(34,34,34,3,1,2012),(35,35,35,3,1,2012),(36,36,17,3,1,2012),(37,37,37,3,1,2012),(38,38,38,3,1,2012),(39,39,27,3,1,2012),(40,40,31,3,1,2012),(41,41,41,3,1,2012),(42,42,24,3,1,2012),(43,43,43,3,1,2012),(44,44,44,3,1,2012),(45,45,19,3,1,2012),(46,46,46,3,1,2012),(47,47,47,3,1,2012),(48,48,31,3,1,2012),(49,49,49,3,1,2012),(50,50,50,3,1,2012),(51,51,51,3,1,2012),(52,52,43,3,1,2012),(53,53,2,3,1,2012),(54,54,54,3,1,2012),(55,55,55,3,1,2012),(56,56,56,3,1,2012),(57,57,19,3,1,2012),(58,58,37,3,1,2012),(59,59,59,3,1,2012),(60,60,3,3,1,2012),(61,61,61,3,1,2012),(62,62,17,3,1,2012),(63,63,63,3,1,2012),(64,64,64,3,1,2012),(65,65,30,3,1,2012),(66,66,66,3,1,2012),(67,67,3,3,1,2012),(68,68,68,3,1,2012),(69,69,69,3,1,2012),(70,70,59,3,1,2012),(71,71,71,3,1,2012),(72,72,24,3,1,2012),(73,73,3,3,1,2012),(74,74,16,3,1,2012),(75,75,75,3,1,2012),(76,76,31,3,1,2012),(77,77,77,3,1,2012),(78,78,78,3,1,2012),(79,79,79,3,1,2012),(80,80,1,3,1,2012),(81,81,81,3,1,2012),(82,82,82,3,1,2012),(83,83,83,3,1,2012),(84,84,84,3,1,2012),(85,85,85,3,1,2012),(86,86,86,3,1,2012),(87,87,87,3,1,2012),(88,88,88,3,1,2012),(89,89,24,3,1,2012),(90,90,38,3,1,2012),(91,91,91,3,1,2012),(92,92,11,3,1,2012),(93,93,59,3,1,2012),(94,94,94,3,1,2012),(95,95,95,3,1,2012),(96,96,96,3,1,2012),(97,97,61,3,1,2012),(98,98,15,3,1,2012),(99,99,27,3,1,2012),(100,100,12,1,1,2014),(101,101,61,2,1,2014),(102,102,24,2,1,2014),(103,103,103,2,1,2014),(104,104,104,2,1,2014),(105,105,105,2,1,2014),(106,9,9,2,1,2014),(107,107,107,2,1,2014),(108,108,12,2,1,2014),(109,109,109,2,1,2014),(110,10,31,2,1,2014),(111,111,111,2,1,2014),(112,112,112,2,1,2014),(113,113,113,2,1,2014),(114,114,114,3,1,2014),(115,115,115,3,1,2014),(116,116,15,3,1,2014),(117,117,24,3,1,2014),(118,2,2,3,1,2014),(119,119,63,3,1,2014),(120,120,120,3,1,2014),(121,121,4,3,1,2014),(122,122,34,3,1,2014),(123,123,81,3,1,2014),(124,124,124,3,1,2014),(125,125,125,3,1,2014),(126,126,111,3,1,2014),(127,127,127,3,1,2014),(128,128,3,3,1,2014),(129,129,22,3,1,2014),(130,130,130,3,1,2014),(131,131,131,3,1,2014),(132,132,3,3,1,2014),(133,133,133,3,1,2014),(134,134,134,3,1,2014),(135,135,23,3,1,2014),(136,136,136,3,1,2014),(137,137,137,3,1,2014),(138,138,3,3,1,2014),(139,139,131,3,1,2014),(140,140,81,3,1,2014),(141,141,12,3,1,2014),(142,142,142,3,1,2014),(143,143,24,3,1,2014),(144,144,30,3,1,2014),(145,145,145,3,1,2014),(146,146,146,3,1,2014),(147,147,34,3,1,2014),(148,148,32,3,1,2014),(149,149,149,3,1,2014),(150,150,150,3,1,2014),(151,151,151,3,1,2014),(152,152,152,3,1,2014),(153,153,153,3,1,2014),(154,154,12,3,1,2014),(155,155,155,3,1,2014),(156,156,5,3,1,2014),(157,157,157,3,1,2014),(158,158,158,3,1,2014),(159,159,159,3,1,2014),(160,160,160,3,1,2014),(161,161,161,3,1,2014),(162,162,12,3,1,2014),(163,163,163,3,1,2014),(164,164,164,3,1,2014),(165,165,165,3,1,2014),(166,166,43,3,1,2014),(167,167,167,3,1,2014),(168,168,168,3,1,2014),(169,169,54,3,1,2014),(170,170,170,3,1,2014),(171,171,5,3,1,2014),(172,172,172,3,1,2014),(173,173,173,3,1,2014),(174,174,4,3,1,2014),(175,175,175,3,1,2014),(176,176,176,3,1,2014),(177,177,177,3,1,2014),(178,178,15,3,1,2014),(179,179,179,3,1,2014),(180,180,180,3,1,2014),(181,181,43,3,1,2014),(182,182,182,3,1,2014),(183,183,30,3,1,2014),(184,184,184,3,1,2014),(185,185,111,3,1,2014),(186,186,165,3,1,2014),(187,187,187,3,1,2014),(188,188,24,3,1,2014),(189,189,37,3,1,2014),(190,190,190,3,1,2014),(191,191,191,3,1,2014),(192,192,192,3,1,2014),(193,193,193,3,1,2014),(194,194,194,3,1,2014),(195,195,195,3,1,2014),(196,196,88,3,1,2014),(197,197,165,3,1,2014),(198,198,190,3,1,2014),(199,199,199,3,1,2014),(200,200,200,3,1,2014),(201,201,1,3,1,2014),(202,202,87,3,1,2014),(203,203,203,3,1,2014),(204,204,204,3,1,2014),(205,205,205,3,1,2014),(206,206,83,3,1,2014),(207,207,24,3,1,2014),(208,208,165,3,1,2014),(209,209,88,3,1,2014),(210,210,210,3,1,2014),(211,211,34,3,1,2014),(212,212,111,3,1,2014),(213,213,94,3,1,2014),(214,214,214,3,1,2014),(215,215,215,3,1,2014),(216,216,216,3,1,2014),(217,217,27,3,1,2014),(218,218,218,3,1,2014),(219,219,15,3,1,2014),(220,220,24,3,1,2014),(221,221,111,3,1,2014),(222,222,222,3,1,2014),(223,223,47,1,1,2011),(224,224,79,2,1,2011),(225,225,127,2,1,2011),(226,226,226,2,1,2011),(227,227,227,2,1,2011),(228,228,190,2,1,2011),(229,229,87,2,1,2011),(230,230,230,2,1,2011),(231,231,231,2,1,2011),(232,232,232,2,1,2011),(233,233,114,3,1,2011),(234,234,12,3,1,2011),(235,235,79,3,1,2011),(236,236,236,3,1,2011),(237,237,14,3,1,2011),(238,238,238,3,1,2011),(239,239,239,3,1,2011),(240,225,127,3,1,2011),(241,241,18,3,1,2011),(242,242,242,3,1,2011),(243,243,243,3,1,2011),(244,244,170,3,1,2011),(245,245,22,3,1,2011),(246,246,61,3,1,2011),(247,247,91,3,1,2011),(248,248,71,3,1,2011),(249,249,249,3,1,2011),(250,250,172,3,1,2011),(251,251,251,3,1,2011),(252,252,252,3,1,2011),(253,253,253,3,1,2011),(254,254,17,3,1,2011),(255,255,242,3,1,2011),(256,256,29,3,1,2011),(257,257,30,3,1,2011),(258,258,258,3,1,2011),(259,259,259,3,1,2011),(260,260,32,3,1,2011),(261,261,261,3,1,2011),(262,262,151,3,1,2011),(263,263,91,3,1,2011),(264,264,264,3,1,2011),(265,265,3,3,1,2011),(266,266,261,3,1,2011),(267,267,95,3,1,2011),(268,268,47,3,1,2011),(269,269,259,3,1,2011),(270,270,81,3,1,2011),(271,271,158,3,1,2011),(272,272,24,3,1,2011),(273,273,273,3,1,2011),(274,274,111,3,1,2011),(275,275,12,3,1,2011),(276,276,44,3,1,2011),(277,277,277,3,1,2011),(278,278,278,3,1,2011),(279,279,279,3,1,2011),(280,280,280,3,1,2011),(281,281,226,3,1,2011),(282,282,282,3,1,2011),(283,283,283,3,1,2011),(284,284,104,3,1,2011),(285,285,37,3,1,2011),(286,286,286,3,1,2011),(287,287,172,3,1,2011),(288,288,111,3,1,2011),(289,289,19,3,1,2011),(290,290,44,3,1,2011),(291,291,61,3,1,2011),(292,292,227,3,1,2011),(293,293,293,3,1,2011),(294,294,294,3,1,2011),(295,295,87,3,1,2011),(296,296,34,3,1,2011),(297,297,66,3,1,2011),(298,298,298,3,1,2011),(299,299,104,3,1,2011),(300,300,300,3,1,2011),(301,301,249,3,1,2011),(302,302,302,3,1,2011),(303,303,303,3,1,2011),(304,304,304,3,1,2011),(305,305,190,3,1,2011),(306,306,24,3,1,2011),(307,307,104,3,1,2011),(308,308,308,3,1,2011),(309,309,17,3,1,2011),(310,310,310,3,1,2011),(311,311,107,3,1,2011),(312,312,312,3,1,2011),(313,313,313,3,1,2011),(314,314,85,3,1,2011),(315,315,86,3,1,2011),(316,316,87,3,1,2011),(317,317,88,3,1,2011),(318,318,230,3,1,2011),(319,319,231,3,1,2011),(320,320,54,3,1,2011),(321,321,63,3,1,2011),(322,322,322,3,1,2011),(323,323,95,3,1,2011),(324,324,232,3,1,2011),(325,216,325,3,1,2011),(326,326,326,3,1,2011),(327,327,327,3,1,2011),(328,328,328,3,1,2011);
/*!40000 ALTER TABLE `member` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `namemap`
--

DROP TABLE IF EXISTS `namemap`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `namemap` (
  `Nid` int(11) NOT NULL AUTO_INCREMENT,
  `Name` varchar(100) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`Nid`),
  UNIQUE KEY `Nid_UNIQUE` (`Nid`),
  UNIQUE KEY `Name_UNIQUE` (`Name`)
) ENGINE=InnoDB AUTO_INCREMENT=792 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `namemap`
--

LOCK TABLES `namemap` WRITE;
/*!40000 ALTER TABLE `namemap` DISABLE KEYS */;
INSERT INTO `namemap` VALUES (780,''),(525,' Abhay  Mehta'),(731,' Ahmed Elmagarmid'),(665,' Alan Demers  '),(772,' Alberto Laender'),(560,' Alin Deutsch'),(632,' Allison Terrell'),(769,' Altigran da Silva'),(606,' Ambuj Singh'),(766,' Amol Deshpande'),(571,' Amr El Abbadi'),(540,' Anastasia Ailamaki'),(650,' Anastasios Kementsietsidis*'),(775,' Andrea Tagarelli'),(781,' Andrew McGregor'),(514,' Anthny Tung'),(470,' Ashwin Machanavajjhala'),(683,' Balder ten Cate'),(479,' Beng Chin Ooi'),(662,' Benjamin Sowell'),(577,' Bin Cui'),(707,' Bin Yao'),(513,' Bing Tian Dai*'),(578,' Bingsheng He'),(480,' Cecilia Procopiuc'),(647,' Cheng Sheng'),(523,' Chetan Gupta'),(758,' Christian Jensen'),(551,' Christoph Koch,'),(740,' Christos Doulkeridis'),(676,' Chuan Xiao'),(610,' Chun Chen'),(670,' Dan Suciu'),(770,' Daniel Oliveira'),(703,' Daniel Wang'),(506,' Davide Martinenghi'),(561,' Dayou Zhou'),(787,' Debabrata Dash'),(501,' Deepak Agarwal'),(482,' Divesh Srivastava'),(590,' Divesh Srivastava*'),(515,' Divyakant Agrawal'),(599,' Donald Kossmann'),(616,' Dong Deng'),(724,' Dong Xin'),(529,' Dong Xin*'),(717,' dongqing Yang,'),(771,' Edleno de Moura'),(777,' Edward Mazur'),(640,' Eli Upfal'),(521,' Elke Rundensteiner'),(533,' Elton Domnori'),(573,' Eva Sitaridi'),(747,' Evan Jones'),(705,' Feifei Li*'),(517,' Feng Li'),(534,' Francesco Guerra'),(774,' Francesco Gullo*'),(549,' Gabriel Bender'),(585,' Gao Cong'),(567,' Gautam Das'),(788,' Georgios Gratsias'),(582,' Guoliang Li'),(510,' Haiquan Chen'),(509,' Haixun Wang'),(496,' Hans-Arno  Jacobsen'),(749,' Hari Balakrishnan'),(679,' Heng Tao Shen*'),(475,' Hwanjo Yu'),(505,' Ihab Ilyas'),(485,' Ilhwan Ko'),(526,' Ismail Ari'),(732,' Jaewoo Lee'),(713,' Jeffrey Xu Yu'),(680,' Jiajun Liu'),(657,' Jian Li'),(648,' JIan Pei'),(604,' Jian Wu'),(581,' Jianhua Feng'),(619,' Jianzhong Li'),(715,' Jiashuai Zhou'),(725,' Jiawei Han'),(633,' Jignesh Patel'),(491,' Jin Li'),(498,' Jing Yang'),(472,' Jinsoo Lee'),(627,' Jizhou Luo'),(550,' Johannes Gehrke'),(700,' Johannes Gehrke,'),(784,' Jos&eacute'),(695,' Joseph Hellerstein'),(522,' Kara Greenfield'),(528,' Kaushik Chakrabarti'),(651,' Kavitha Srinivas'),(706,' Ke Yi'),(728,' Ke Yi*'),(763,' Kostas  Stefanidis'),(589,' Laks VS Lakshmanan'),(558,' Lei Chen'),(727,' Lu Wang'),(547,' Lucja Kot*'),(785,' Luis Ambite'),(702,' Magdalena Balazinska'),(574,' Manolis Tsangaris'),(507,' Marco Tagliasacchi'),(661,' Marcos Vaz Salles'),(734,' Marianne Winslett'),(477,' Marios Hadjieleftheriou*'),(694,' Michael Franklin'),(744,' Michael Hay'),(697,' Michael Wick,'),(708,' Min Wang'),(696,' Minos Garofalakis'),(556,' Mirek Riedewald*'),(688,' Nagapramod Mandagere'),(595,' Nan Li'),(621,' Nan Tang'),(566,' Nan Zhang'),(754,' Nan Zhang*'),(642,' Nedyalko Borisov'),(741,' Neoklis Polyzotis'),(545,' Nesime Tatbul'),(531,' Nick Koudas'),(652,' Octavian Udrea'),(624,' Oege de Moor'),(639,' Olga Papaemmanouil'),(692,' Panayiotis Tsaparas,'),(544,' Peter Fischer*'),(539,' Phillip Gibbons'),(684,' Phokion Kolaitis'),(782,' Prashant Shenoy'),(645,' Radu Sion'),(541,' Radu Stoica'),(656,' Raghav Kaushik'),(535,' Raquel Trillo Lado'),(614,' Ravishankar Ramamurthy*'),(738,' Raymond Chi-Wing Wong*'),(503,' Rene Mueller'),(602,' Reynold Xin'),(714,' Ruoming Jin'),(612,' Sai Wu'),(519,' Sai Wu*'),(748,' Sam Madden'),(689,' Sandeep Uttamchandani,'),(474,' Seung-won Hwang'),(538,' Shimin Chen'),(643,' Shivnath Babu'),(597,' Shu Tao'),(620,' Shuai Ma'),(524,' Song Wang'),(493,' Srinivasan  Parthasarathy'),(761,' Stavros  Papadopoulos'),(691,' Stelios Paparizos'),(548,' Sudip Roy'),(490,' Sudipta Sengupta'),(569,' Sudipto Das*'),(601,' Sukriti Ramesh'),(659,' Suman Nath'),(596,' Supriyo Chakraborty'),(553,' Susan Davidson'),(543,' Tahmineh Sanamrad'),(716,' Tengjiao Wang'),(600,' Tim Kraska*'),(554,' Tova Milo'),(638,' Ugur Cetintemel'),(564,' Vasilis Vassalos'),(666,' Walker White'),(685,' Wang-Chiew Tan*'),(674,' Wei Wang'),(511,' Wei-Shinn Ku,'),(622,' Wenyuan Yu*'),(668,' Wolfgang Gatterbauer'),(488,' Wook-Shin Han'),(499,' Xiaofang Zhou'),(723,' Xiaolei Li'),(593,' Xifeng Yan'),(587,' Xin Luna Dong'),(629,' Xin Wang'),(677,' Xuemin Lin'),(579,' Xuexuan Chen'),(473,' Yang-Sae Moon'),(791,' Yanhong A. Liu'),(778,' Yanlei Diao'),(575,' Yannis Ioannidis'),(719,' Yannis Papakonstantinou,'),(536,' Yannis Velegrakis*'),(663,' Yao Yue'),(675,' Yifei Lu'),(699,' Yin Lou'),(635,' Yinan Li*'),(584,' Ying Lu*'),(630,' Yinghui Wu*'),(494,' Yiye Ruan'),(710,' YongChul Kwon'),(486,' Youngdae Kim'),(729,' Yunhao Liu,'),(672,' Zack Ives'),(605,' Zheng Yun'),(736,' Zhenhui Li'),(628,' Zijing Tan'),(594,' Ziyu Guan'),(359,'A. Pavan'),(568,'Aaron Elmore'),(263,'Ada	Fu'),(189,'Aditya 	Parameswaran'),(739,'Akrivi Vlachou*'),(32,'Alan		Fekete'),(260,'Alan	Fekete'),(148,'Alan 	Fekete'),(530,'Albert Angel*'),(287,'Alex	Labrinidis'),(211,'Alexander 	Thomson'),(295,'Alexandra	Meliou'),(667,'Alexandra Meliou*'),(56,'Alexandros		Labrinidis'),(172,'Alexandros 	Labrinidis'),(51,'Alfons		Kemper'),(103,'Alfons Kemper'),(143,'Alin 	Deutsch'),(146,'Alin 	Dobra'),(370,'Allan Borodin'),(343,'Alon Efrat'),(555,'Alper Okcan'),(207,'Ambuj 	Singh'),(155,'Amit 	Goyal'),(29,'Amol		Deshpande'),(256,'Amol	Deshpande'),(142,'Amol 	Deshpande'),(312,'Ana Carolina	Salgado'),(2,'Anastasia Ailamaki'),(389,'Andras Salamon'),(452,'Andreas Pieris'),(366,'Andres Letelier'),(336,'Andrew Mcgregor'),(191,'Andy Pavlo'),(18,'Angela		Bonifati'),(241,'Angela	Bonifati'),(124,'Angela 	Bonifati'),(27,'Anish		Das Sarma'),(212,'Anthony 	Tung'),(265,'Ariel	Fuxman'),(592,'Arijit Khan*'),(36,'Aristides		Gionis'),(402,'Arnaud Durand'),(13,'Arvind		Arasu'),(655,'Arvind Arasu*'),(37,'Ashish		Goel'),(12,'Ashraf		Aboulnaga'),(234,'Ashraf	Aboulnaga'),(115,'Ashraf 	Aboulnaga'),(62,'Ashwin		Machanavajjhala?'),(178,'Ashwin 	Machanavajjhala'),(374,'Ashwin Machanavajjhala'),(28,'Atish		Das Sarma'),(352,'Atri Rudra'),(132,'Badrish 	Chandramouli'),(527,'Bahman Bahmani'),(437,'Balder Ten Cate'),(410,'Bas Ketsman'),(500,'Bee-Chung Chen*'),(69,'Beng	Chin	Ooi'),(185,'Beng Chin 	Ooi'),(50,'Benjamin		Kao'),(339,'Benny Kimelfeld'),(399,'Benoit Groz'),(281,'Bettina	Kemme'),(226,'Bettina Kemme'),(764,'Bhargav Kanagal*'),(378,'Bill Howe'),(137,'Bin 	Cui'),(489,'Biplob Debnath*'),(251,'Bobby	Cochrane'),(776,'Boduo Li*'),(130,'Bogdan 	Cautis'),(682,'Bogdan Alexe'),(733,'Bolin Ding*'),(290,'Boon Thau	Loo'),(268,'Boris	Glavic'),(354,'Bozidar Radunovic'),(152,'Bugra 	Gedik'),(328,'Calisto	Zuzarte'),(220,'Carlo 	Zaniolo'),(138,'Carlo  	Curino'),(746,'Carlo Curino*'),(773,'Carlotta Domeniconi'),(76,'Cecilia		Procopiuc'),(128,'Ceren 	Budak'),(364,'Cheng Sheng'),(159,'Chetan 	Gupta'),(163,'Christian S. 	Jensen'),(53,'Christoph		Koch'),(262,'Christoph Freytag'),(25,'Christopher		Clifton'),(46,'Christopher		Jermaine'),(198,'Christopher 	Re'),(351,'Christopher Re'),(516,'Chun Chen'),(99,'Cong		Yu'),(82,'Cyrus		Shahabi'),(693,'Daisy Zhe Wang*'),(87,'Dan		Suciu'),(316,'Dan	Suciu'),(435,'Dan Olteanu'),(229,'Dan Suciu'),(233,'Daniel	Abadi'),(114,'Daniel 	Abadi'),(167,'Daniel 	Kifer'),(373,'Daniel Kifer'),(469,'Daniel Kifer*'),(412,'Daniel Zinn'),(136,'Dario 	Colazzo'),(60,'David		Lomet'),(179,'David 	Maier'),(449,'David P. Woodruff'),(331,'David Woodruff'),(238,'Denilson	Barbosa'),(109,'Dennis Shasha'),(271,'Dimitrios	Gounopoulos'),(158,'Dimitrios 	Gunopulos'),(187,'Dimitris 	Papadias'),(203,'Dimitris Sacharidis'),(192,'Dino 	Pedreschi'),(10,'Divesh Srivastava'),(117,'Divyakant	Agrawal'),(8,'Donald Kossmann'),(580,'Dongzhe Ma*'),(426,'Dung Nguyen'),(423,'Edith Cohen. All-Distances Sketches'),(438,'Efthymia Tsamoura'),(387,'Egor V. Kostylev'),(768,'Eli Custodio Vilarinho*'),(559,'Elio Damaggio*'),(4,'Elisa Bertino'),(311,'Elke	Rundensteiner'),(107,'Elke Rundensteiner'),(350,'Ely Porat'),(701,'Emad Soroush*'),(418,'Emanuel Sallinger'),(261,'Enrico	Franconi'),(77,'Erhard		Rahm'),(176,'Eric	Lo'),(313,'Eric	Simon'),(75,'Evaggelia		Pitoura'),(320,'Evimaria	Terzi'),(195,'Fabio  	Porto'),(70,'Fatma		?can'),(301,'Fatma	Ozcan'),(298,'Felix	Naumann'),(310,'Flavio	Rizzolo'),(267,'Floris	Geerts'),(386,'Floris Geerts'),(464,'Francesco Scarcello'),(443,'Francesco Silvestri'),(68,'Frank		Olken'),(411,'Frank Neven'),(407,'Frederick Reiss'),(139,'Gautam 	Das'),(451,'Georg Gottlob'),(54,'George		Kollios'),(169,'George 	Kollios'),(783,'George Konstantinidis*'),(285,'Georgia	Koutrika'),(11,'Gerhard Weikum'),(65,'Gerome		Miklau'),(183,'Gerome  	Miklau'),(463,'Gianluigi Greco'),(294,'Gianni Mecca'),(258,'Gill	Dobbie'),(333,'Giuseppe Ottaviano'),(156,'Goetz 	Graefe'),(214,'Gottfried 	Vossen'),(394,'Graham Cormode'),(173,'Guoliang 	Li'),(615,'Guoliang Li*'),(120,'Gustavo 	Alonso'),(59,'Guy		Lohman'),(45,'H. V.		Jagadish'),(171,'Harumi 	Kuno'),(730,'Hazem Elmeleegy*'),(33,'Helena		Galhardas'),(497,'Henning Koehler*'),(55,'Henry		Korth'),(572,'Herald Kllapi*'),(641,'Herodotos Herodotou*'),(247,'Hong	Cheng'),(349,'Hung Ngo'),(484,'Hwanjo Yu*'),(371,'Hyun Chul Lee'),(275,'Ihab	Ilyas'),(162,'Ihab 	Ilyas'),(63,'Ioana		Manolescu'),(105,'Ioana Manolescu'),(186,'Ippokratis 	Pandis'),(264,'Irini	Fundulaki'),(252,'Isabel	Cruz'),(278,'Jaewoo	Kang'),(396,'Jeff Phillips'),(690,'Jeffrey Pound*'),(637,'Jennie Duggan*'),(145,'Jens 	Dittrich'),(210,'Jens 	Teubner'),(502,'Jens Teubner*'),(161,'Jeong-Hyon 	Hwang'),(432,'Jeremy Fineman'),(177,'Jiaheng 	Lu'),(583,'Jiaheng Lu'),(193,'Jian 	Pei'),(673,'Jianbin Qin*'),(698,'Jiaqi Zhai*'),(190,'Jignesh 	Patel'),(305,'Jignesh M.	Patel'),(228,'Jignesh Patel'),(300,'Joann	Ordille'),(266,'Johann	Gamper'),(151,'Johann-Christoph 	Freytag'),(153,'Johannes 	Gehrke'),(270,'Jonathan	Goldstein'),(74,'Jorge		P?ez'),(367,'Jorge Perez'),(388,'Juan L. Reutter'),(150,'Juliana 	Freire'),(6,'Juliana Freire'),(78,'Jun		Rao'),(98,'Jun		Yang'),(219,'Jun 	Yang'),(712,'Jun Gao*'),(24,'Junghoo		Cho'),(58,'Jure		Leskovec'),(129,'K. Sel&ccedil;uk 	Candan'),(790,'K. Tuncay Tekle*'),(337,'Katja Loseman'),(347,'Ke Yi'),(308,'Ken	Pu'),(108,'Ken Salem'),(80,'Kenneth		Ross'),(201,'Kenneth 	Ross'),(21,'Kevin	Chen-Chuan	Chang'),(141,'Khuzaima 	Daudjee'),(111,'Kian-Lee Tan'),(165,'Konstantinos 	Karanasos'),(334,'Kook Jin Ahn'),(57,'Kristen		LeFevre'),(289,'Kristen	Lefevre'),(196,'Krithi 	Ramamritham'),(216,'Kyu-Young	Whang'),(542,'Kyumars Sheykh Esmaili'),(83,'Kyuseok		Shim'),(206,'Kyuseok 	Shim'),(362,'Kzysztof Choromanski'),(104,'Laks Lakshmanan'),(249,'Laura	Chiticariu'),(246,'Lei	Chen'),(101,'Lei Chen'),(391,'Leonid Libkin'),(737,'Lian Liu'),(718,'Liang Chen*'),(85,'Lisa		Singh'),(314,'Lisa	Singh'),(404,'Luc Segoufin'),(1,'Luis Gravano'),(269,'Lukasz	Golab'),(154,'Lukasz 	Golab'),(259,'Luna Dong'),(100,'M. Tamer &Ouml;zsu'),(377,'Magdalena Balazinska'),(20,'Malu		Castellanos'),(242,'Malu	Castellanos'),(457,'Manish Patil'),(537,'Manos Athanassoulis*'),(455,'Mantas Simkus'),(14,'Marcelo		Arenas'),(237,'Marcelo	Arenas'),(450,'Marcelo Arenas'),(671,'Marie Jacob*'),(40,'Marios		Hadjieleftheriou'),(182,'Marta  	Mattoso	Federal'),(52,'Martin		Kersten'),(92,'Martin		Theobald'),(166,'Martin 	Kersten'),(430,'Martin Farach-Colton'),(168,'Masaru 	Kitsuregawa'),(283,'Masura	Kitsuregawa'),(282,'Maurice	van Keulen'),(221,'Meihui Zhang'),(512,'Meiyu Lu'),(273,'Melanie	Herschel'),(326,'Melanie	Wu'),(302,'Meral	Ozsoyoglu'),(421,'Miao Qiao'),(19,'Michael		Cafarella'),(81,'Michael		Rys'),(225,'Michael	B&ouml;hlen'),(122,'Michael 	Armbrust'),(127,'Michael 	B&ouml;hlen'),(429,'Michael A. Bender'),(436,'Michael Benedikt'),(102,'Michael Franklin'),(445,'Miguel Angel Romero Orth'),(392,'Miguel Romero'),(355,'Milan Vojnovic'),(324,'Min	Wang'),(232,'Min Wang'),(565,'Mingyang Zhang*'),(7,'Minos Garofalakis'),(199,'Mirek 	Riedewald'),(66,'Mirella		Moro'),(297,'Mirella	Moro'),(248,'Mitch	Cherniak'),(520,'Mo Liu*'),(504,'Mohamed Soliman*'),(467,'Mohammad Mahdian'),(495,'Mohammad Sadoghi*'),(508,'Mohan Yang*'),(288,'Mong Li	Lee'),(448,'Morten St枚ckel'),(446,'Moshe Vardi'),(84,'Narayanan		Shivakumar'),(562,'Nathan Bales*'),(686,'Nedyalko Borisov*'),(306,'Neoklis	Polyzotis'),(319,'Nesime	Tatbul'),(231,'Nesime Tatbul'),(403,'Nicole Schweikardt'),(180,'Nikos 	Mamoulis'),(26,'Nilesh		Dalvi'),(254,'Nilesh	Dalvi'),(174,'Ninghui 	Li'),(546,'Nitin Gupta'),(71,'Olga		Papaemmanouil'),(658,'Oliver Kennedy*'),(16,'Pablo		Barcel?'),(390,'Pablo Barcelo'),(444,'Pablo Barcel贸'),(356,'Pan Xu'),(116,'Pankaj 	Agarwal'),(393,'Pankaj Agarwal'),(342,'Pankaj K. Agarwal'),(49,'Panos		Kalnis'),(250,'Panos	Chrysanthis'),(304,'Paolo Papotti'),(375,'Paraschos Koutris'),(321,'Patrick	Valduriez'),(112,'Patrick Valduriez'),(461,'Paul Beame'),(722,'Peixiang Zhao*'),(750,'Peng Wang*'),(236,'Periklis	Andritsos'),(149,'Peter 	Fischer'),(194,'Peter 	Pietzuch'),(17,'Philip		Bohannon'),(123,'Philip	Bernstein'),(3,'Philip Bernstein'),(125,'Philippe 	Bonnet'),(35,'Phillip		Gibbons'),(416,'Phokion G. Kolaitis'),(341,'Phokion Kolaitis'),(381,'Piotr Indyk'),(376,'Prasan Upadhyaya'),(709,'Prasang Upadhyaya*'),(348,'Qin Zhang'),(61,'Qiong	Joan	Luo'),(291,'Qiong	Luo'),(307,'Rachel	Pottinger'),(23,'Rada		Chirkova'),(135,'Rada 	Chirkova'),(86,'Radu		Sion'),(315,'Radu	Sion'),(613,'Raghav Kaushik'),(458,'Rahul Shah'),(79,'Rajeev		Rastogi'),(442,'Rasmus Pagh'),(97,'Raymond	Chi-Wing	Wong'),(299,'Raymond	Ng'),(368,'Reinhard Pichler'),(223,'Ren&eacute;e J. Miller'),(383,'Reut Levi'),(424,'Revisited'),(119,'Reza 	Akbarinia'),(434,'Robert Fink'),(332,'Roberto Grossi'),(340,'Ronald Fagin'),(382,'Ronitt Rubinfeld'),(204,'Russell 	Sears'),(47,'Ryan		Johnson'),(277,'Ryan	Johnson'),(88,'S.		Sudarshan'),(317,'S.	Sudarshan'),(209,'S.  	Sudarshan'),(218,'Sai 	Wu'),(292,'Sam	Madden'),(227,'Sam Madden'),(623,'Sebastiaan van Schaik*'),(400,'Sebastian Maneth'),(454,'Sebastian Rudolph'),(369,'Sebastian Skritek'),(202,'Senjuti Basu Roy'),(653,'Senjuti Basu Roy*'),(466,'Sepideh Mahabadi'),(296,'Sergey	Melnik'),(433,'Seth Gilbert'),(131,'Sharma 	Chakravarthy'),(459,'Sharma V'),(15,'Shivnath		Babu'),(235,'Sihem	Amer-Yahia'),(224,'Sihem Amer-Yahia'),(401,'Slawek Staworko'),(284,'Solmaz	Kolahi'),(215,'Song 	Wang'),(649,'Songyun Duan'),(532,'sonia Bergamaschi'),(634,'Spyros Blanas'),(330,'Srikanta Tirthapura'),(360,'Srikanta Tirthpura'),(181,'Stefan 	Manegold'),(73,'Stelios		Paparizos'),(126,'Stephane 	Bressan'),(217,'Steven E. 	Whang'),(408,'Stijn Vansummeren'),(95,'Stratis		Viglas'),(323,'Stratis	Viglas'),(43,'Stratos		Idreos'),(586,'Su Chen'),(38,'Sudipto		Guha'),(140,'Sudipto 	Das'),(335,'Sudipto Guha'),(644,'Sumeet Bajaj*'),(344,'Swaminathan Sankararman'),(431,'S谩ndor Fekete'),(478,'T Labs - Research'),(363,'Tal Malkin'),(280,'Tasos	Kementsietsidis'),(303,'Themis	Palpanas'),(48,'Theodore		Johnson'),(164,'Theodore 	Johnson'),(253,'Theodore Dalamagas'),(184,'Thomas 	Neumann	Technische'),(286,'Tim	Kraska'),(170,'Tim 	Kraska'),(205,'Timos 	Sellis'),(384,'Ting Deng'),(243,'Tiziana Catarci'),(272,'Todd J.	Green'),(409,'Tom J Ameloot'),(200,'Tore 	Risch'),(157,'Torsten 	Grust'),(9,'Tova Milo'),(660,'Tuan Cao*'),(244,'Ugur	Cetintemel'),(255,'Umesh	Dayal'),(5,'Umeshwar Dayal'),(767,'University of Maryland'),(779,'University of Massachusetts'),(419,'Vadim Savenkov'),(42,'Vagelis		Hristidis'),(468,'Vahab S. Mirrokni'),(90,'Val		Tannen'),(94,'Vasilis		Vassalos'),(213,'Vasilis 	Vassalos'),(34,'Venkatesh		Ganti'),(492,'Venu Satuluri*'),(786,'Verena Kantere*'),(279,'Verene	Kantere'),(309,'Vibhor	Rastogi'),(197,'Vijayshankar 	Raman'),(67,'Vivek		Narasayya'),(64,'Volker		Markl'),(293,'Volker	Markl'),(121,'Walid 	Aref'),(89,'Wang-Chiew		Tan'),(318,'Wang-Chiew	Tan'),(230,'Wang-Chiew Tan'),(96,'Wei		Wang'),(133,'Wei 	Chen'),(720,'Wen Jin*'),(385,'Wenfei Fan'),(338,'Wim Martens'),(41,'Wook-Shin		Han'),(160,'Wook-Shin 	Han'),(471,'Wook-Shin Han*'),(345,'Wuzhou Zhang'),(274,'Wynne	Hsu'),(557,'Xiang Lian*'),(420,'Xiaocheng Hu'),(222,'Xiaofang 	Zhou'),(113,'Xiaokui Xiao'),(742,'Xiaokui Xiao*'),(327,'Xifeng	Yan'),(31,'Xin	Luna	Dong'),(756,'Xin Cao*'),(753,'Xin Jin'),(147,'Xin Luna 	Dong'),(175,'Xuemin 	Lin'),(380,'Yakov Nekrich'),(576,'Yanfei Lv*'),(704,'Yang Li'),(30,'Yanlei		Diao'),(257,'Yanlei	Diao'),(144,'Yanlei 	Diao'),(72,'Yannis		Papakonstantinou'),(322,'Yannis	Velegrakis'),(188,'Yannis 	Papakonstantinou'),(208,'Yannis 	Sismanis'),(22,'Yi		Chen'),(245,'Yi	Chen'),(134,'Yi 	Chen'),(631,'Yinan Li*'),(93,'Yuanyuan		Tian'),(91,'Yufei		Tao'),(329,'Yufei Tao'),(646,'Yufei Tao*'),(372,'Yuli Ye'),(608,'Yuting Lin*'),(44,'Zachary		Ives'),(276,'Zack	Ives'),(346,'Zengfeng Huang'),(397,'Zheiwei Wei'),(353,'Zhenming Liu'),(552,'Zhuowei Bao*'),(678,'Zi Huang'),(603,'Ziyu Guan*'),(239,'Zohra Bellahsene'),(39,'Zolt?		Gy?gyi');
/*!40000 ALTER TABLE `namemap` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `orgnizationmap`
--

DROP TABLE IF EXISTS `orgnizationmap`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `orgnizationmap` (
  `Oid` int(11) NOT NULL AUTO_INCREMENT,
  `Orgnization` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`Oid`),
  UNIQUE KEY `Oid_UNIQUE` (`Oid`),
  UNIQUE KEY `Orgnization_UNIQUE` (`Orgnization`)
) ENGINE=InnoDB AUTO_INCREMENT=329 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `orgnizationmap`
--

LOCK TABLES `orgnizationmap` WRITE;
/*!40000 ALTER TABLE `orgnizationmap` DISABLE KEYS */;
INSERT INTO `orgnizationmap` VALUES (84,'1618Labs'),(163,'Aalborg University'),(22,'Arizona State University'),(259,'AT&amp;T Labs - Research'),(10,'AT&amp;T Labs-Research'),(164,'AT&T Labs - Research'),(31,'AT&T Labs-Research'),(203,'Athena Research Center'),(94,'Athens University of Economics and Business'),(300,'Avaya Labs'),(137,'Beijing University'),(152,'Bilkent University'),(54,'Boston University'),(71,'Brandeis University'),(170,'Brown University'),(310,'Carleton University'),(191,'Carnegie Mellon University'),(302,'Case Western Reserve University'),(91,'Chinese University of Hong Kong'),(277,'CMU'),(18,'CNR'),(1,'Columbia University'),(153,'Cornell University'),(43,'CWI'),(279,'Cyprus  University of Technology'),(15,'Duke University'),(2,'EPFL'),(120,'ETH'),(231,'ETH Zurich'),(8,'ETHZ'),(312,'Federal University of Pernambucol'),(261,'Free University of Bolzano-Bozen'),(85,'Georgetown University'),(34,'Google'),(27,'Google Research'),(298,'Hasso Plattner Institute'),(20,'Hewlett-Packard Laboratories'),(159,'Hitachi'),(215,'Hitachi America'),(176,'Hong Kong Polytechnic University'),(180,'Hong Kong University'),(187,'Hong Kong University of Science & Technology'),(61,'Hong Kong University of Science and Technology'),(242,'HP'),(5,'HP Labs'),(232,'HP Labs China'),(151,'Humboldt-Universit&auml;t zu Berlin'),(251,'IBM'),(165,'IBM Almaden Res. Ctr.'),(59,'IBM Almaden Research Center'),(328,'IBM Canada'),(249,'IBM Research - Almaden'),(230,'IBM Research - Almaden and UC Santa Cruz'),(280,'IBM Research - TJ Watson'),(88,'IIT Bombay'),(253,'IMIS Institute/&quot;Athena&quot; R.C.'),(194,'Imperial College London'),(326,'Indiana University'),(63,'INRIA'),(105,'Inria Saclay'),(112,'Inria Sophia-Antipolis M&eacute;diterran&eacute;e'),(264,'Institute of Computer Science - FORTH'),(35,'Intel Labs'),(125,'IT University of Copenhagen'),(216,'KAIST'),(49,'KAUST'),(325,'Korea Advanced Institute of Science and Technology'),(278,'Korea University'),(41,'Kyungpook National University'),(68,'Lawrence Berkeley National Laboratory'),(55,'Lehigh University'),(78,'LinkedIn'),(195,'LNCC'),(11,'Max-Planck Institute for Informatics'),(226,'McGill University'),(81,'Microsoft'),(3,'Microsoft Research'),(133,'Microsoft Research Asia'),(227,'MIT'),(113,'Nanyang Technological University'),(111,'National University of Singapore'),(69,'National University of Singapore?'),(134,'New Jersey Institute of Technology'),(109,'New York University'),(23,'North Carolina State University'),(199,'Northeastern University'),(6,'NYU-Poly'),(236,'Ontario Cancer Institute'),(167,'Penn State University'),(150,'Polytechnic Institute of NYU'),(179,'Portland State University'),(160,'POSTECH'),(14,'PUC Chile'),(4,'Purdue University'),(115,'QCRI'),(177,'Renmin University'),(46,'Rice University'),(205,'RMIT University'),(313,'SAP'),(243,'Sapienza - Universit&agrave; di Roma'),(83,'Seoul National University'),(193,'Simon Fraser University'),(37,'Stanford University'),(86,'Stony Brook University'),(161,'SUNY Albany'),(7,'Technical University of Crete'),(33,'Technical University of Lisbon'),(103,'Technical University of Munich'),(210,'Technische Universit&auml;t Dortmund'),(157,'Technische Universit&auml;t T&uuml;bingen'),(9,'Tel Aviv University'),(130,'Telecom ParisTech'),(283,'The Univ. of Tokyo'),(50,'The University of Hong Kong'),(173,'Tsinghua University'),(64,'TU Berlin'),(51,'TU M?chen'),(155,'Twitter'),(286,'UC Berkeley'),(303,'Univerity of Trento'),(16,'Universidad de Chile'),(66,'Universidade Federal de Minas Gerais'),(294,'Universit&agrave; della Basilicata'),(192,'Universit&agrave; di Pisa'),(304,'Universit&agrave; Roma Tre'),(149,'Universit&auml;t Frieburg Germany'),(184,'Universit&auml;t M&uuml;nchen'),(124,'Universit&eacute; Lille 1'),(239,'Universit&eacute; Montpellier'),(136,'Universit&eacute; Paris-Dauphine'),(238,'University of Alberta'),(158,'University of Athens'),(258,'University of Auckland'),(293,'University of Berlin'),(104,'University of British Columbia'),(24,'University of California'),(327,'University of California at Santa Barbara'),(95,'University of Edinburgh'),(146,'University of Florida'),(252,'University of Illinois at Chicago'),(21,'University of Illinois at Urbana-Champaign'),(75,'University of Ioannina'),(77,'University of Leipzig'),(29,'University of Maryland'),(30,'University of Massachusetts'),(142,'University of Mayland'),(19,'University of Michigan'),(175,'University of New South Wales'),(96,'University of North Carolina at Chapel Hill'),(44,'University of Pennsylvania'),(38,'University of Pennsylvania?'),(172,'University of Pittsburgh'),(56,'University of Pittsburgh?'),(222,'University of Quensland'),(182,'University of Rio de Janeiro'),(145,'University of Saarlands'),(82,'University of Southern California'),(32,'University of Sydney'),(131,'University of Texas at Arlington'),(168,'University of Tokyo and NII'),(47,'University of Toronto'),(322,'University of Trento'),(273,'University of Tubingen'),(282,'University of Twente'),(87,'University of Washington'),(12,'University of Waterloo'),(190,'University of Wisconsin'),(127,'University of Zurich'),(308,'UOIT'),(200,'Uppsala Universitet'),(214,'Westf. Wilhelms-Universit&auml;t M&uuml;nster'),(107,'Worcester Polytechnic Institute'),(204,'Yahoo!'),(79,'Yahoo! Labs'),(17,'Yahoo! Research'),(114,'Yale University'),(218,'Zhejiang University');
/*!40000 ALTER TABLE `orgnizationmap` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `papermap`
--

DROP TABLE IF EXISTS `papermap`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `papermap` (
  `Pid` int(11) NOT NULL AUTO_INCREMENT,
  `Paper` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`Pid`),
  UNIQUE KEY `Pid_UNIQUE` (`Pid`),
  UNIQUE KEY `Paper_UNIQUE` (`Paper`)
) ENGINE=InnoDB AUTO_INCREMENT=136 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `papermap`
--

LOCK TABLES `papermap` WRITE;
/*!40000 ALTER TABLE `papermap` DISABLE KEYS */;
INSERT INTO `papermap` VALUES (12,'  On Optimality of Clustering Through a Space-Filling Curve'),(1,' 2D Orthogonal Range Search Revisited: Indexability with Redundancy'),(37,' A dichotomy for non-repeating queries with negation in probabilistic databases'),(6,' A Dichotomy in the Complexity of Deletion Propagation with Functional Dependencies'),(31,' A Dynamic I/O-Efficient Structure for One-Dimensional Top-k Range Reporting'),(18,' A Rigorous and Customizable Framework for Privacy'),(21,' Approximating and Testing k-Histogram Distributions in Sub-linear Time'),(35,' Beyond Worst-case Analysis for Joins with Minesweeper'),(23,' Classification of Annotation Semirings over Query Containment'),(28,' Cleaning Inconsistencies in Information Extraction via Prioritized Repairs'),(48,' Composable Core-sets for Diversity and Coverage Maximization'),(30,' Containment and Equivalence of Well-Designed SPARQL'),(11,' Continuous Distributed Counting for Non-monotonic streams'),(36,' Cost-Oblivious Storage Reallocation'),(47,' Counting Solutions to Conjunctive Queries: Structural and Hybrid Tractability'),(26,' Deterministic Regular Expressions in Linear Time'),(41,' Does Query Evaluation Tractability Help Query Containment?'),(15,' Dynamic Top-K Range Reporting in External Memory'),(24,' Efficient Approximations of Conjunctive Queries'),(27,' Enumerating First-Order Queries over Databases of Low Degree'),(43,' Expressive Languages for Querying the Semantic Web'),(44,' Expressiveness of Guarded Existential Rule Languages'),(38,' Generating Low-cost Plans from Proofs'),(4,' Graph Sketching: Sparsification, Spanners, and Subgraphs'),(34,' HIP Estimators for Massive Graphs Analysis'),(33,' Independent Range Sampling'),(42,' Is Min-Wise Hashing Optimal for Summarizing Set Intersection?'),(7,' Local Transformations and Conjunctive-Query Equivalence'),(17,' Max-Sum Diversification, Monotone Submodular Functions, and Dynamic Updates'),(25,' Mergeable Summaries'),(8,' Nearest-neighbor Searching under Uncertainty'),(32,' Nested Dependencies: Structure and Reasoning'),(39,' On Scale Independence for Querying Big Data'),(22,' On the Complexity of Package Recommendation Problems'),(19,' Query-Based Data Pricing'),(9,' Randomized Algorithms for Tracking Distributed Count, Frequencies, and Ranks'),(2,' Rectangle-efficient Aggregation in Spatial Data Streams'),(46,' Skew in Parallel Query Processing'),(13,' Space-efficient Estimation of Statistics over Subsampled Streams'),(20,' Space-efficient Range Reporting for Categorical Data'),(16,' Static Analyis and Optimization of Semantic Web Queries'),(45,' Thankachan and Jeffrey Scott Vitter. Categorical Range Maxima Queries'),(5,' The Complexity of Evaluating Path Expressions in SPARQL'),(40,' The Input/Output Complexity of Triangle Enumeration'),(14,' The Power of the Dinur-Nissim Algorithm: breaking Privacy of Statistical and Graph Databases'),(3,' The Wavelet Trie: Maintaining an Indexed Sequence of Strings in Compressed Space'),(29,' Weaker Forms of Monotonicity for Declarative Networking: a more fine-grained answer to the CALM-conjecture'),(10,' Worst-case Optimal Join Algorithms'),(113,'A Latency and Fault-Tolerance Optimizer for Online Parallel Query Processing'),(89,'A memory efficient reachability data structure through bit vector compression'),(50,'A New Approach for Processing Ranked Subsequence Matching Based on Ranked Union'),(132,'A Platform for Scalable One-pass Analytics using MapReduce'),(131,'Advancing Data Clustering via Projective Clustering Ensembles'),(97,'Apples and Oranges: A Comparison of RDF Benchmarks and Real RDF Datasets'),(111,'ArrayStore: A Storage Manager for  Complex Parallel Array Processing'),(84,'Assessing and Ranking Structural Correlations in Graphs'),(110,'ATLAS: A Probabilistic Algorithm for High Dimensional Similarity Search'),(126,'Attribute Domain Discovery for Hidden Web Databases'),(51,'Automatic Discovery of Attributes in Relational Databases'),(55,'BE-Tree: An Index Structure to Efficiently Match Boolean Expressions over High-dimensional Discrete Space'),(68,'Changing Flights in Mid-air: A Model for Safely Modifying Continuous Queries'),(61,'Collaborative Tagging for Effective Storage and Retrieval of Web 2.0 Data'),(127,'Collective Spatial Keyword Querying'),(115,'Context-sensitive Ranking for Document Retrieval'),(83,'CrowdDB: Answering Queries with Crowdsourcing'),(99,'Data Generation using Declarative Constraints'),(92,'Design and Evaluation of Main Memory Hash Join Algorithms for Multi-core CPUs'),(106,'Designing and Refining Schema Mappings via Data Examples'),(120,'Differentially Private Data Cubes: Optimizing Noise Sources and Consistency'),(63,'E-Cube: Multi-Dimensional Event Sequence Analysis Using Hierarchical Pattern Query Sharing'),(105,'Effective Data Co-Reduction for Multimedia Similarity Search'),(116,'Efficient and Generic Evaluation of Ranked Queries'),(86,'Efficient Auditing For Complex SQL Queries'),(65,'Efficient Diversity-Aware Search'),(104,'Efficient Exact Edit Similarity Query Processing with Asymmetric Signature Schemes'),(56,'Efficient Parallel Skyline Processing using Hyperplane Projections'),(72,'Efficient Query Answering in Probabilistic RDF Graphs'),(69,'Entangled queries: enabling declarative data-driven coordination'),(52,'Exact Indexing for Support Vector Machines'),(108,'Facet Discovery for Structured Web Search: A Query-log Mining Approach'),(87,'Faerie: Efficient Filtering Algorithms for Approximate Dictionary-based Entity Extraction'),(101,'Fast Checkpoint Recovery Algorithms for Frequently Consistent Applications'),(64,'Fast Personalized PageRank on MapReduce'),(125,'Finding Semantics in Time Series'),(121,'Finding Shortest Path on Land Surface'),(112,'Flexible Aggregate Similarity Search'),(117,'Graph Cube: On Warehousing and OLAP Multidimensional Networks'),(58,'How Soccer Players Would Do Stream Joins'),(109,'Hybrid In-Database Inference for Declarative Information Extraction'),(90,'Incremental Graph Pattern Matching'),(88,'Interaction between Record Matching and Data Repairing'),(123,'iReduct: Differential Privacy with Reduced Relative Errors'),(100,'Jigsaw: Efficient optimization over uncertain enterprise data'),(130,'Joint Unsupervised Structure Discovery and Information Extraction'),(66,'Keyword Search over Relational Databases: a Metadata Approach'),(70,'Labeling Recursive Workflow Executions On-the-Fly'),(57,'Latent OLAP: Data Cubes over Latent Variables'),(79,'LazyFTL: A Page-level Flash Translation Layer Optimized for NAND Flash Memory'),(119,'Leveraging Query Logs for Schema Mapping Generation in U-MAP'),(85,'Llama: Leveraging Columnar Storage for Scalable Join Processing in the MapReduce Framework'),(54,'Local Graph Sparsification for Scalable Clustering'),(98,'Location-Aware Type Ahead Search on Spatial Databases: Semantics and Efficiency'),(67,'MaSM: Efficient Online Updates in Data Warehouses'),(75,'Mining a Search Engine&rsquo;s Corpus: Efficient Yet Unbiased Sampling and Aggregate Estimation'),(135,'More efficient Datalog queries: Subsumptive tabling beats magic sets'),(128,'Nearest Keyword Search in XML Documents'),(82,'Neighborhood Based Fast Graph Search in Large Networks'),(114,'Neighborhood-Privacy Protected Shortest Distance Computing in Cloud'),(49,'No Free Lunch in Data Privacy'),(96,'On k-skip shortest paths'),(78,'Operation-Aware Buffer Management in Flash-based Systems'),(93,'Performance prediction for concurrent database workloads'),(134,'Predicting cost amortization for query services'),(71,'Processing Theta-Joins using MapReduce'),(94,'Query Optimization Techniques for Partitioned Tables'),(73,'Querying contract databases based on temporal behavior'),(60,'Querying Uncertain Data with Aggregate Constraints'),(59,'Ranking with Uncertain Scoring Functions: Semantics and Sensitivity Measures'),(80,'Reverse Spatial and Textual k Nearest Neighbors Search'),(118,'Sampling Based Algorithms for Quantile Computation in Sensor Networks'),(133,'Scalable Query Rewriting: A Graph-Based Approach'),(77,'Schedule Optimization for Data Processing Flows on the Cloud'),(74,'Score-Consistent Algebraic Optimization of Full-Text Search Queries with GRAFT'),(129,'Sensitivity Analysis and Explanations for Robust Query Evaluation in Probabilistic Databases'),(103,'Sharing work in Keyword Search over Databases'),(53,'SkimpyStash: RAM Space Skimpy Key-Value Store on Flash-based Storage'),(122,'Skyline Query Processing over Joins'),(62,'TI: An Efficient Indexing Mechanism for Real-Time Search on Tweets'),(102,'Tracing Data Errors with View-Conditioned Causality'),(95,'TrustedDB: A Trusted Hardware Based Database with Privacy and Data Confidentiality'),(107,'Warding off the Dangers of Data Corruption with Amulet'),(81,'We Challenge You to Certify Your Updates'),(91,'WHAM: A High-throughput Sequence Alignment Method'),(124,'Workload-Aware Database Monitoring and Consolidation'),(76,'Zephyr: Live Migration in Shared Nothing Databases for Elastic Cloud Platforms');
/*!40000 ALTER TABLE `papermap` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `roll`
--

DROP TABLE IF EXISTS `roll`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `roll` (
  `Rid` int(11) NOT NULL AUTO_INCREMENT,
  `Roll` varchar(45) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`Rid`),
  UNIQUE KEY `Rid_UNIQUE` (`Rid`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `roll`
--

LOCK TABLES `roll` WRITE;
/*!40000 ALTER TABLE `roll` DISABLE KEYS */;
INSERT INTO `roll` VALUES (1,'Chair'),(2,'Leader'),(3,'Member');
/*!40000 ALTER TABLE `roll` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2014-10-23 18:09:07
